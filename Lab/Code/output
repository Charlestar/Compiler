Starting parse
Entering state 0
Reading a token: Next token is token TYPE (1.1-4: )
Shifting token TYPE (1.1-4: )
Entering state 3
Reducing stack by rule 14 (line 128):
   $1 = token TYPE (1.1-4: )
-> $$ = nterm Specifier (1.1-4: )
Stack now 0
Entering state 7
Reading a token: Next token is token ID (1.7-13: )
Shifting token ID (1.7-13: )
Entering state 16
Reading a token: Next token is token "(" (1.15: )
Shifting token "(" (1.15: )
Entering state 26
Reading a token: Next token is token ")" (1.16: )
Shifting token ")" (1.16: )
Entering state 40
Reducing stack by rule 27 (line 180):
   $1 = token ID (1.7-13: )
   $2 = token "(" (1.15: )
   $3 = token ")" (1.16: )
-> $$ = nterm FunDec (1.7-15: )
Stack now 0 7
Entering state 20
Reading a token: Next token is token "{" (2.1: )
Shifting token "{" (2.1: )
Entering state 32
Reading a token: Next token is token TYPE (3.5-8: )
Shifting token TYPE (3.5-8: )
Entering state 3
Reducing stack by rule 14 (line 128):
   $1 = token TYPE (3.5-8: )
-> $$ = nterm Specifier (3.5-8: )
Stack now 0 7 20 32
Entering state 35
Reading a token: Next token is token ID (3.11: )
Shifting token ID (3.11: )
Entering state 45
Reducing stack by rule 24 (line 166):
   $1 = token ID (3.11: )
-> $$ = nterm VarDec (3.11: )
Stack now 0 7 20 32 35
Entering state 52
Reading a token: Next token is token "=" (3.14: )
Shifting token "=" (3.14: )
Entering state 81
Reading a token: Next token is token FLOAT (3.16-23: )
Shifting token FLOAT (3.16-23: )
Entering state 68
Reducing stack by rule 80 (line 363):
   $1 = token FLOAT (3.16-23: )
-> $$ = nterm Exp (3.16-23: )
Stack now 0 7 20 32 35 52 81
Entering state 120
Reading a token: Next token is token ";" (3.25: )
Reducing stack by rule 63 (line 291):
   $1 = nterm VarDec (3.11: )
   $2 = token "=" (3.14: )
   $3 = nterm Exp (3.16-23: )
-> $$ = nterm Dec (3.11-23: )
Stack now 0 7 20 32 35
Entering state 54
Next token is token ";" (3.25: )
Reducing stack by rule 60 (line 277):
   $1 = nterm Dec (3.11-23: )
-> $$ = nterm DecList (3.11-23: )
Stack now 0 7 20 32 35
Entering state 53
Next token is token ";" (3.25: )
Shifting token ";" (3.25: )
Entering state 83
Reducing stack by rule 54 (line 266):
   $1 = nterm Specifier (3.5-8: )
   $2 = nterm DecList (3.11-23: )
   $3 = token ";" (3.25: )
-> $$ = nterm Def (3.5-24: )
Stack now 0 7 20 32
Entering state 37
Reading a token: Next token is token TYPE (4.5-8: )
Shifting token TYPE (4.5-8: )
Entering state 3
Reducing stack by rule 14 (line 128):
   $1 = token TYPE (4.5-8: )
-> $$ = nterm Specifier (4.5-8: )
Stack now 0 7 20 32 37
Entering state 35
Reading a token: Next token is token ID (4.11: )
Shifting token ID (4.11: )
Entering state 45
Reducing stack by rule 24 (line 166):
   $1 = token ID (4.11: )
-> $$ = nterm VarDec (4.11: )
Stack now 0 7 20 32 37 35
Entering state 52
Reading a token: Next token is token "=" (4.14: )
Shifting token "=" (4.14: )
Entering state 81
Reading a token: Next token is token FLOAT (4.16-20: )
Shifting token FLOAT (4.16-20: )
Entering state 68
Reducing stack by rule 80 (line 363):
   $1 = token FLOAT (4.16-20: )
-> $$ = nterm Exp (4.16-20: )
Stack now 0 7 20 32 37 35 52 81
Entering state 120
Reading a token: Next token is token "." (4.22: )
Shifting token "." (4.22: )
Entering state 117
Reading a token: Next token is token INT (4.23: )
Error type B at Line 4: syntax error, unexpected INT, expecting ID, near "1".
Shifting token error (4.23: )
Entering state 157
Reducing stack by rule 83 (line 372):
   $1 = nterm Exp (4.16-20: )
   $2 = token "." (4.22: )
   $3 = token error (4.23: )
-> $$ = nterm Exp (4.16-22: )
Stack now 0 7 20 32 37 35 52 81
Entering state 120
Next token is token INT (4.23: )
Reducing stack by rule 63 (line 291):
   $1 = nterm VarDec (4.11: )
   $2 = token "=" (4.14: )
   $3 = nterm Exp (4.16-22: )
-> $$ = nterm Dec (4.11-22: )
Stack now 0 7 20 32 37 35
Entering state 54
Next token is token INT (4.23: )
Shifting token error (4.23: )
Entering state 84
Next token is token INT (4.23: )
Error: discarding token INT (4.23: )
Error: popping token error (4.23: )
Stack now 0 7 20 32 37 35 54
Shifting token error (4.23: )
Entering state 84
Reading a token: Next token is token ";" (4.24: )
Shifting token ";" (4.24: )
Entering state 123
Reducing stack by rule 59 (line 274):
   $1 = nterm Specifier (4.5-8: )
   $2 = nterm Dec (4.11-22: )
   $3 = token error (4.23: )
   $4 = token ";" (4.24: )
-> $$ = nterm Def (4.5-23: )
Stack now 0 7 20 32 37
Entering state 37
Reading a token: Next token is token TYPE (5.5-8: )
Shifting token TYPE (5.5-8: )
Entering state 3
Reducing stack by rule 14 (line 128):
   $1 = token TYPE (5.5-8: )
-> $$ = nterm Specifier (5.5-8: )
Stack now 0 7 20 32 37 37
Entering state 35
Reading a token: Next token is token ID (5.11: )
Shifting token ID (5.11: )
Entering state 45
Reducing stack by rule 24 (line 166):
   $1 = token ID (5.11: )
-> $$ = nterm VarDec (5.11: )
Stack now 0 7 20 32 37 37 35
Entering state 52
Reading a token: Next token is token "=" (5.14: )
Shifting token "=" (5.14: )
Entering state 81
Reading a token: Next token is token FLOAT (5.16-20: )
Shifting token FLOAT (5.16-20: )
Entering state 68
Reducing stack by rule 80 (line 363):
   $1 = token FLOAT (5.16-20: )
-> $$ = nterm Exp (5.16-20: )
Stack now 0 7 20 32 37 37 35 52 81
Entering state 120
Reading a token: Next token is token ";" (5.22: )
Reducing stack by rule 63 (line 291):
   $1 = nterm VarDec (5.11: )
   $2 = token "=" (5.14: )
   $3 = nterm Exp (5.16-20: )
-> $$ = nterm Dec (5.11-20: )
Stack now 0 7 20 32 37 37 35
Entering state 54
Next token is token ";" (5.22: )
Reducing stack by rule 60 (line 277):
   $1 = nterm Dec (5.11-20: )
-> $$ = nterm DecList (5.11-20: )
Stack now 0 7 20 32 37 37 35
Entering state 53
Next token is token ";" (5.22: )
Shifting token ";" (5.22: )
Entering state 83
Reducing stack by rule 54 (line 266):
   $1 = nterm Specifier (5.5-8: )
   $2 = nterm DecList (5.11-20: )
   $3 = token ";" (5.22: )
-> $$ = nterm Def (5.5-21: )
Stack now 0 7 20 32 37 37
Entering state 37
Reading a token: Next token is token TYPE (6.5-8: )
Shifting token TYPE (6.5-8: )
Entering state 3
Reducing stack by rule 14 (line 128):
   $1 = token TYPE (6.5-8: )
-> $$ = nterm Specifier (6.5-8: )
Stack now 0 7 20 32 37 37 37
Entering state 35
Reading a token: Next token is token ID (6.11: )
Shifting token ID (6.11: )
Entering state 45
Reducing stack by rule 24 (line 166):
   $1 = token ID (6.11: )
-> $$ = nterm VarDec (6.11: )
Stack now 0 7 20 32 37 37 37 35
Entering state 52
Reading a token: Next token is token "=" (6.14: )
Shifting token "=" (6.14: )
Entering state 81
Reading a token: Next token is token FLOAT (6.16-22: )
Shifting token FLOAT (6.16-22: )
Entering state 68
Reducing stack by rule 80 (line 363):
   $1 = token FLOAT (6.16-22: )
-> $$ = nterm Exp (6.16-22: )
Stack now 0 7 20 32 37 37 37 35 52 81
Entering state 120
Reading a token: Next token is token "." (6.24: )
Shifting token "." (6.24: )
Entering state 117
Reading a token: Next token is token INT (6.25: )
Error type B at Line 6: syntax error, unexpected INT, expecting ID, near "2".
Shifting token error (6.25: )
Entering state 157
Reducing stack by rule 83 (line 372):
   $1 = nterm Exp (6.16-22: )
   $2 = token "." (6.24: )
   $3 = token error (6.25: )
-> $$ = nterm Exp (6.16-24: )
Stack now 0 7 20 32 37 37 37 35 52 81
Entering state 120
Next token is token INT (6.25: )
Reducing stack by rule 63 (line 291):
   $1 = nterm VarDec (6.11: )
   $2 = token "=" (6.14: )
   $3 = nterm Exp (6.16-24: )
-> $$ = nterm Dec (6.11-24: )
Stack now 0 7 20 32 37 37 37 35
Entering state 54
Next token is token INT (6.25: )
Shifting token error (6.25: )
Entering state 84
Next token is token INT (6.25: )
Error: discarding token INT (6.25: )
Error: popping token error (6.25: )
Stack now 0 7 20 32 37 37 37 35 54
Shifting token error (6.25: )
Entering state 84
Reading a token: Next token is token ";" (6.26: )
Shifting token ";" (6.26: )
Entering state 123
Reducing stack by rule 59 (line 274):
   $1 = nterm Specifier (6.5-8: )
   $2 = nterm Dec (6.11-24: )
   $3 = token error (6.25: )
   $4 = token ";" (6.26: )
-> $$ = nterm Def (6.5-25: )
Stack now 0 7 20 32 37 37 37
Entering state 37
Reading a token: Next token is token RETURN (7.5-9: )
Reducing stack by rule 53 (line 263):
-> $$ = nterm DefList (6.26: )
Stack now 0 7 20 32 37 37 37 37
Entering state 57
Reducing stack by rule 52 (line 259):
   $1 = nterm Def (6.5-25: )
   $2 = nterm DefList (6.26: )
-> $$ = nterm DefList (6.5-25: )
Stack now 0 7 20 32 37 37 37
Entering state 57
Reducing stack by rule 52 (line 259):
   $1 = nterm Def (5.5-21: )
   $2 = nterm DefList (6.5-25: )
-> $$ = nterm DefList (5.5-6.25: )
Stack now 0 7 20 32 37 37
Entering state 57
Reducing stack by rule 52 (line 259):
   $1 = nterm Def (4.5-23: )
   $2 = nterm DefList (5.5-6.25: )
-> $$ = nterm DefList (4.5-6.25: )
Stack now 0 7 20 32 37
Entering state 57
Reducing stack by rule 52 (line 259):
   $1 = nterm Def (3.5-24: )
   $2 = nterm DefList (4.5-6.25: )
-> $$ = nterm DefList (3.5-6.25: )
Stack now 0 7 20 32
Entering state 50
Next token is token RETURN (7.5-9: )
Shifting token RETURN (7.5-9: )
Entering state 69
Reading a token: Next token is token ID (7.12: )
Shifting token ID (7.12: )
Entering state 66
Reading a token: Next token is token "+" (7.15: )
Reducing stack by rule 81 (line 367):
   $1 = token ID (7.12: )
-> $$ = nterm Exp (7.12: )
Stack now 0 7 20 32 50 69
Entering state 94
Next token is token "+" (7.15: )
Shifting token "+" (7.15: )
Entering state 111
Reading a token: Next token is token ID (7.17: )
Shifting token ID (7.17: )
Entering state 66
Reading a token: Next token is token ";" (7.19: )
Reducing stack by rule 81 (line 367):
   $1 = token ID (7.17: )
-> $$ = nterm Exp (7.17: )
Stack now 0 7 20 32 50 69 94 111
Entering state 146
Next token is token ";" (7.19: )
Reducing stack by rule 68 (line 315):
   $1 = nterm Exp (7.12: )
   $2 = token "+" (7.15: )
   $3 = nterm Exp (7.17: )
-> $$ = nterm Exp (7.12-17: )
Stack now 0 7 20 32 50 69
Entering state 94
Next token is token ";" (7.19: )
Shifting token ";" (7.19: )
Entering state 133
Reducing stack by rule 39 (line 229):
   $1 = token RETURN (7.5-9: )
   $2 = nterm Exp (7.12-17: )
   $3 = token ";" (7.19: )
-> $$ = nterm Stmt (7.5-18: )
Stack now 0 7 20 32 50
Entering state 77
Reading a token: Next token is token "}" (8.1: )
Reducing stack by rule 36 (line 218):
-> $$ = nterm StmtList (7.19: )
Stack now 0 7 20 32 50 77
Entering state 106
Reducing stack by rule 35 (line 214):
   $1 = nterm Stmt (7.5-18: )
   $2 = nterm StmtList (7.19: )
-> $$ = nterm StmtList (7.5-18: )
Stack now 0 7 20 32 50
Entering state 76
Next token is token "}" (8.1: )
Shifting token "}" (8.1: )
Entering state 105
Reducing stack by rule 33 (line 207):
   $1 = token "{" (2.1: )
   $2 = nterm DefList (3.5-6.25: )
   $3 = nterm StmtList (7.5-18: )
   $4 = token "}" (8.1: )
-> $$ = nterm CompSt (2.1-8.0: )
Stack now 0 7 20
Entering state 33
Reducing stack by rule 6 (line 105):
   $1 = nterm Specifier (1.1-4: )
   $2 = nterm FunDec (1.7-15: )
   $3 = nterm CompSt (2.1-8.0: )
-> $$ = nterm ExtDef (1.1-8.0: )
Stack now 0
Entering state 6
Reading a token: Now at end of input.
Reducing stack by rule 3 (line 94):
-> $$ = nterm ExtDefList (8.1: )
Stack now 0 6
Entering state 14
Reducing stack by rule 2 (line 90):
   $1 = nterm ExtDef (1.1-8.0: )
   $2 = nterm ExtDefList (8.1: )
-> $$ = nterm ExtDefList (1.1-8.0: )
Stack now 0
Entering state 5
Reducing stack by rule 1 (line 83):
   $1 = nterm ExtDefList (1.1-8.0: )
-> $$ = nterm Program (1.1-8.0: )
Stack now 0
Entering state 4
Now at end of input.
Shifting token $end (9.2: )
Entering state 13
Stack now 0 4 13
Cleanup: popping token $end (9.2: )
Cleanup: popping nterm Program (1.1-8.0: )
